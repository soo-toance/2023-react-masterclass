{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","concat","then","response","json","fetchCoinHistory","coinId","Math","floor","Date","now","Container","styled","div","_templateObject","_taggedTemplateLiteral","Loader","span","_templateObject2","Header","header","_templateObject3","CoinsList","ul","_templateObject4","Coin","li","_templateObject5","props","theme","textColor","bgColor","accentColor","Title","h1","_templateObject6","Img","img","_templateObject7","Coins","_useQuery","useQuery","isLoading","data","_jsxs","children","_jsx","Helmet","slice","map","coin","Link","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","_ref","_data$map","ApexChart","type","series","item","x","time_close","y","parseFloat","open","high","low","close","options","mode","chart","height","width","toolbar","show","background","grid","yaxis","tooltip","enabled","xaxis","axisBorder","axisTicks","labels","categories","price","colors","formatter","value","toFixed","PricesList","table","Prices","tr","Price","toISOString","replace","Overview","OverviewItem","Description","p","Tabs","_templateObject8","Tab","_templateObject9","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","_useQuery2","fetchCoinTickers","refetchInterval","tickersLoading","tickersData","loading","_Fragment","rank","quotes","USD","description","total_supply","max_supply","Switch","Route","path","Router","BrowserRouter","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","ThemeBtn","button","TopConatiner","App","_useState","useState","_useState2","_slicedToArray","setTheme","ThemeProvider","onClick","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.5bd75f0e.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n    const endDate = Math.floor(Date.now() / 1000); // 현재 시간을 초로 나타냄\n    const startDate = endDate - 60 * 60 * 23 * 7 * 1; // 현재 시간에서 1주 -1 시간에 해당하는 초를 뺌;\n\n    return fetch(`https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`).then((response) =>\n      response.json()\n    );\n  }\n  ","import { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Header = styled.header`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`;\n\nconst CoinsList = styled.ul`\n`;\n\nconst Coin = styled.li`\n    background-color: ${props => props.theme.textColor};\n    color: ${props => props.theme.bgColor};\n    margin-bottom: 10px;\n    border-radius: 15px;\n    a {\n        display: flex;\n        align-items: center;\n        padding: 20px;\n        transition: color 0.5s ease-in;\n    }\n    &:hover {\n        a {\n            color: ${props => props.theme.accentColor}\n        }\n    }\n`;\n\nconst Title = styled.h1`\n    font-size: 48px;\n    color: ${props => props.theme.accentColor}\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface CoinInferface {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string\n}\n\n// a href 는 redirect 시킴, link 사용 \nfunction Coins() {\n    // const [coins, setCoins] = useState<CoinInferface[]>([]);\n    // const [loading, setLoading] = useState(true);\n\n    // useEffect(() => {\n    //     // https://api.coinpaprika.com/v1/coins\n    //     (async() => {\n    //         // execute immediately \n    //         const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n    //         const json = await response.json();\n\n    //         setCoins(json.slice(0, 100));\n    //         setLoading(false);\n    //     })(); \n    // }, []) // component start 시작 시에만 수행\n\n    const { isLoading, data } = useQuery<CoinInferface[]>(\"allCoins\", fetchCoins)\n\n    return (\n        <Container>\n            <Helmet>\n                <title>코인</title>\n            </Helmet>\n            <Header>\n                <Title>코인</Title>\n            </Header>\n            {\n                isLoading ? (\n                    <Loader>\"Loading\"</Loader>\n                ) : <CoinsList>\n                    {\n                        data?.slice(0, 100).map(coin => (\n                        <Coin key={coin.id}>\n                            <Link to={{\n                                    pathname: `/${coin.id}`,\n                                    state: { name: coin.name },\n                                }}>\n                                    <Img src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}></Img>\n                                    {coin.name} &rarr; \n                            </Link>\n                        </Coin>\n                    ))}\n\n                </CoinsList>\n            }\n        </Container>\n    )\n}\n\nexport default Coins;","import { useParams } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId } : ChartProps) { // parameter 가져오는 방법 2 \n  // const params = useParams(); // parameter 가져오는 방법 1 \n  const {isLoading, data } = useQuery<IHistorical[]>(\n      [ \"fetchCoinHistory\", coinId ],\n      () => fetchCoinHistory(coinId)\n  );\n\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((item) => { \n                return {\n                  x : new Date(item.time_close),\n                  y : [parseFloat(item.open), parseFloat(item.high), parseFloat(item.low), parseFloat(item.close)]\n                };\n              }) ?? []\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              type: 'candlestick',\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            yaxis: {\n              tooltip: {\n                enabled: true\n              }\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;","import { useParams } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport styled from \"styled-components\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: string;\n  volume: number;\n  market_cap: number;\n}\n\ninterface PriceProps {\n  coinId: string;\n}\n\nconst PricesList = styled.table`\n  color: ${props => props.theme.textColor};\n  font-size: 12px;\n\n  thead {\n    line-height: 30px;\n    text-decoration: underline;\n    text-align: center;\n  }\n`;\n\nconst Prices = styled.tr`\n    color: ${props => props.theme.textColor};\n    height: 20px;\n    padding: 10px;\n\n    td {\n      width: 500px;\n    }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nfunction Price({coinId} : PriceProps) {\n  const {isLoading, data } = useQuery<IHistorical[]>(\n    [ \"fetchCoinHistory\", coinId ],\n    () => fetchCoinHistory(coinId)\n  );\n\n\n    return (\n      <div>\n        {\n          isLoading ? (\n              <Loader>\"Loading\"</Loader>\n          ) : <PricesList>\n              <thead>\n                <td>time_close</td>\n                <td>price</td>\n              </thead>\n              {\n                  data?.slice(0, 100).map(coin => (\n                  <Prices key={coin.time_close}>\n                    <td>{new Date(coin.time_close).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}</td>\n                    <td>{coin.close}</td>\n                      {/* {new Date(coin.time_close).toISOString().replace(/T/, ' ').replace(/\\..+/, '')} : {coin.close} 미김  */}\n                  </Prices>\n              ))}\n\n          </PricesList>\n      }\n      </div>\n    );\n}\n\nexport default Price;","import { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n    Switch,\n    Route,\n    useLocation,\n    useParams,\n    useRouteMatch,\n  } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n\n\n  a {\n   color: white; \n   font-size: 10px;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n    coinId: string;\n}\n\ninterface RouteState {\n    name: string;\n}\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n  }\n  \n  interface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n      USD: {\n        ath_date: string;\n        ath_price: number;\n        market_cap: number;\n        market_cap_change_24h: number;\n        percent_change_1h: number;\n        percent_change_1y: number;\n        percent_change_6h: number;\n        percent_change_7d: number;\n        percent_change_12h: number;\n        percent_change_15m: number;\n        percent_change_24h: number;\n        percent_change_30d: number;\n        percent_change_30m: number;\n        percent_from_price_ath: number;\n        price: number;\n        volume_24h: number;\n        volume_24h_change_24h: number;\n      };\n    };\n  }\n\nfunction Coin() {\n    const { coinId } = useParams<RouteParams>();\n    const { state } = useLocation<RouteState>();\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n    const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n        [\"info\", coinId],\n        () => fetchCoinInfo(coinId)\n      );\n    const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n        [\"tickers\", coinId],\n        () => fetchCoinTickers(coinId),\n        {\n            refetchInterval: 5000\n        }\n    );\n    const loading = infoLoading || tickersLoading;\n\n    return (\n        <Container>\n        <Helmet>\n            <title>\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n            </title>\n        </Helmet>\n          <Header>\n            <Title>\n              {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n              <Link to=\"/\">Go back to Home</Link>\n            </Title>\n          </Header>\n          {loading ? (\n            <Loader>Loading...</Loader>\n          ) : (\n            <>\n              <Overview>\n                <OverviewItem>\n                  <span>Rank:</span>\n                  <span>{infoData?.rank}</span>\n                </OverviewItem>\n                <OverviewItem>\n                  <span>Symbol:</span>\n                  <span>${infoData?.symbol}</span>\n                </OverviewItem>\n                <OverviewItem>\n                 <span>Price:</span>\n                 <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n                </OverviewItem>\n              </Overview>\n\n              <Description>{infoData?.description}</Description>\n\n              <Overview>\n                <OverviewItem>\n                  <span>Total Suply:</span>\n                  <span>{tickersData?.total_supply}</span>\n                </OverviewItem>\n                <OverviewItem>\n                  <span>Max Supply:</span>\n                  <span>{tickersData?.max_supply}</span>\n                </OverviewItem>\n              </Overview>\n\n              <Tabs>\n                <Tab isActive={chartMatch !== null}>\n                <Link to={`/${coinId}/chart`}>Chart</Link>\n                </Tab>\n                <Tab isActive={priceMatch !== null}>\n                <Link to={`/${coinId}/price`}>Price</Link>\n                </Tab>\n              </Tabs>\n\n            <Switch>\n                <Route path={`/:coinId/price`}>\n                <Price coinId={coinId} />\n                </Route>\n                <Route path={`/:coinId/chart`}>\n                <Chart coinId={coinId} />\n                </Route>\n            </Switch>\n            </>\n          )}\n        </Container>\n      );\n}\n\nexport default Coin;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n    return (\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/:coinId\">\n                <Coin />\n            </Route>\n            <Route path=\"/\">\n                <Coins />\n            </Route>\n        </Switch>\n    </BrowserRouter>\n    );\n}\n\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme:DefaultTheme = {\n    bgColor: \"#f5f6fa\",\n    textColor: \"#2f3640\",\n    accentColor: \"#e67e22\",\n}\n\nexport const lightTheme:DefaultTheme = {\n    bgColor: \"#2f3640\",\n    textColor: \"#f5f6fa\",\n    accentColor: \"#e67e22\",\n}","import React, { useState } from \"react\"\nimport Circle from \"./Circle\";\nimport styled, { createGlobalStyle } from \"styled-components\"\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, lightTheme } from './theme';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n\n`;\n\nconst ThemeBtn = styled.button`\n  font-size: 12px;\n  margin: 10px auto;\n`;\n\nconst TopConatiner = styled.div`\n  text-align: center;\n`;\n\nfunction App() {\n\n  const [theme, setTheme] = useState<string>();\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light')\n}; \n\n  return (\n    <>\n     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme }>\n        <GlobalStyle />\n        <TopConatiner>\n           <ThemeBtn onClick={toggleTheme}>테마 변경</ThemeBtn>\n        </TopConatiner>\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from './App';\nimport { darkTheme, lightTheme } from './theme';\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n        <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}